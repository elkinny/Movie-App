// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppComponent:  1. To match snapshot 1`] = `
<AppComponent
  handleToggle={[Function]}
  sortToggleValue="sortToggleValue"
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Header>
      <header
        className="header"
      >
        <span
          className="title"
        >
          Movie app
        </span>
      </header>
    </Header>
    <main
      className="container"
    >
      <ErrorBoundary>
        <BrowserRouter>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
          >
            <Switch>
              <Route
                component={[Function]}
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                exact={true}
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/"
              >
                <Connect(SearchMovieContainer)
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                >
                  <SearchMovieContainer
                    getMovies={[Function]}
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    movies={Array []}
                    searchBy={
                      Object {
                        "searchType": "title",
                        "searchValue": "",
                      }
                    }
                    searchMovies={[Function]}
                    setSearchBy={[Function]}
                    setSortBy={[Function]}
                    sortBy="vote_average"
                    sortMovies={[Function]}
                  >
                    <SearchMovieComponent
                      handleSubmit={[Function]}
                      handleToggle={[Function]}
                      movies={Array []}
                      moviesCount={0}
                      searchType="title"
                      sortBy="vote_average"
                    >
                      <SearchFormContainer
                        handleSubmit={[Function]}
                        handleToggle={[Function]}
                        searchType="title"
                      >
                        <SearchFormComponent
                          handleInput={[Function]}
                          handleSubmit={[Function]}
                          searchType="title"
                          searchValue=""
                        >
                          <form
                            className="form"
                            onSubmit={[Function]}
                          >
                            <input
                              name="search"
                              onChange={[Function]}
                              placeholder="Search..."
                              type="text"
                            />
                            <Toggle
                              defaultValue={false}
                              labels={
                                Array [
                                  "Title",
                                  "Genre",
                                ]
                              }
                              onChange={[Function]}
                              text="Search by:"
                              type="search"
                              values={
                                Array [
                                  "title",
                                  "genres",
                                ]
                              }
                            >
                              <div
                                className="toggle"
                              >
                                <span
                                  className="toggle__label"
                                >
                                   
                                  Search by:
                                   
                                </span>
                                <div
                                  className="toggle__body"
                                >
                                  <input
                                    className="toggle__item--left"
                                    defaultChecked={true}
                                    id="toggle-Title"
                                    name="searchToggle"
                                    onChange={[Function]}
                                    type="radio"
                                    value="title"
                                  />
                                  <label
                                    className="btn"
                                    htmlFor="toggle-Title"
                                  >
                                    Title
                                  </label>
                                  <input
                                    className="toggle__item--right"
                                    defaultChecked={false}
                                    id="toggle-Genre"
                                    name="searchToggle"
                                    onChange={[Function]}
                                    type="radio"
                                    value="genres"
                                  />
                                  <label
                                    className="btn"
                                    htmlFor="toggle-Genre"
                                  >
                                    Genre
                                  </label>
                                </div>
                              </div>
                            </Toggle>
                            <input
                              type="submit"
                              value="Search"
                            />
                          </form>
                        </SearchFormComponent>
                      </SearchFormContainer>
                      <SubHeader>
                        <div
                          className="subheader"
                        >
                          <span>
                            0 films are found
                          </span>
                          <Toggle
                            defaultValue={false}
                            labels={
                              Array [
                                "Rate",
                                "Date",
                              ]
                            }
                            onChange={[Function]}
                            text="Sort by:"
                            type="sort"
                            values={
                              Array [
                                "vote_average",
                                "release_date",
                              ]
                            }
                          >
                            <div
                              className="toggle"
                            >
                              <span
                                className="toggle__label"
                              >
                                 
                                Sort by:
                                 
                              </span>
                              <div
                                className="toggle__body"
                              >
                                <input
                                  className="toggle__item--left"
                                  defaultChecked={true}
                                  id="toggle-Rate"
                                  name="sortToggle"
                                  onChange={[Function]}
                                  type="radio"
                                  value="vote_average"
                                />
                                <label
                                  className="btn"
                                  htmlFor="toggle-Rate"
                                >
                                  Rate
                                </label>
                                <input
                                  className="toggle__item--right"
                                  defaultChecked={false}
                                  id="toggle-Date"
                                  name="sortToggle"
                                  onChange={[Function]}
                                  type="radio"
                                  value="release_date"
                                />
                                <label
                                  className="btn"
                                  htmlFor="toggle-Date"
                                >
                                  Date
                                </label>
                              </div>
                            </div>
                          </Toggle>
                        </div>
                      </SubHeader>
                      <MoviesListComponent
                        movies={Array []}
                      >
                        <div
                          className="movie-list"
                        >
                          <span
                            className="movie-list__message"
                          >
                             No movies that match your query 
                          </span>
                        </div>
                      </MoviesListComponent>
                    </SearchMovieComponent>
                  </SearchMovieContainer>
                </Connect(SearchMovieContainer)>
              </Route>
            </Switch>
          </Router>
        </BrowserRouter>
      </ErrorBoundary>
    </main>
    <Footer>
      <footer
        className="footer"
      >
        <span
          className="footer__text"
        >
          Copyright elkin (c) 2019
        </span>
      </footer>
    </Footer>
  </Provider>
</AppComponent>
`;
